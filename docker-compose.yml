services:
    test:
        build: ./
        restart: always
        labels:
            # Habilitar Traefik para este servicio "test" en específico
            - traefik.enable=true
            # Definir el puerto dentro del servicio de Docker que usará
            - traefik.http.services.app.loadbalancer.server.port=80
            # Dominio que utilizará Traefik 'HTTP'
            - traefik.http.routers.app-http.entrypoints=http
            - traefik.http.routers.app-http.rule=Host(`test.carlatino.com`)
            # HTTPS
            - traefik.http.routers.app-https.entrypoints=https
            - traefik.http.routers.app-https.rule=Host(`test.carlatino.com`)
            - traefik.http.routers.app-https.tls=true
            # Usamos 'le' para resolver
            - traefik.http.routers.app-https.tls.certresolver=le
            # https-redirect Middleware de redirección http a https
            - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
            - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
            # Middleware http a https
            - traefik.http.routers.app-http.middlewares=https-redirect
            # Utilizar la red pública de Traefik
            - traefik.docker.networks=traefik-public
        networks:
            # Utilizar la red pública creada para compartir entre Traefik y
            # cualquier otro servicio que necesite estar disponible públicamente con HTTPS
            - traefik-public

networks:
    traefik-public:
        external: true
            